<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2025/10/08/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2025/10/08/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809100845418.png" alt="image-20240809100845418"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809100941662.png" alt="image-20240809100941662"></p><h2 id="一-数据结构的基本概念"><a href="#一-数据结构的基本概念" class="headerlink" title="一.数据结构的基本概念"></a>一.数据结构的基本概念</h2><h3 id="1-数据，数据元素，数据项，数据对象"><a href="#1-数据，数据元素，数据项，数据对象" class="headerlink" title="1.数据，数据元素，数据项，数据对象"></a>1.数据，数据元素，数据项，数据对象</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809101852351.png" alt="image-20240809101852351"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809102119661.png" alt="image-20240809102119661"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809102044453.png" alt="image-20240809102044453"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809102158803.png" alt="image-20240809102158803"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809102236560.png" alt="image-20240809102236560"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809102342022.png" alt="image-20240809102342022"></p><h3 id="2-数据结构"><a href="#2-数据结构" class="headerlink" title="2.数据结构"></a>2.数据结构</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809102449629.png" alt="image-20240809102449629"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809103046641.png" alt="image-20240809103046641"></p><p>逻辑结构：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809103204101.png" alt="image-20240809103204101"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809103233699.png" alt="image-20240809103233699"></p><p>存储结构：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809103412666.png" alt="image-20240809103412666"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809103658334.png" alt="image-20240809103658334"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809103857339.png" alt="image-20240809103857339"></p><p> <img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809104031338.png" alt="image-20240809104031338"></p><h3 id="3-数据类型和抽象数据类型"><a href="#3-数据类型和抽象数据类型" class="headerlink" title="3.数据类型和抽象数据类型"></a>3.数据类型和抽象数据类型</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809104250064.png" alt="image-20240809104250064"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809104451931.png" alt="image-20240809104451931"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809104537392.png" alt="image-20240809104537392"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809104616853.png" alt="image-20240809104616853"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809104712573.png" alt="image-20240809104712573"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809104952848.png" alt="image-20240809104952848"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809105143275.png" alt="image-20240809105143275"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809110637196.png" alt="image-20240809110637196"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809111647352.png" alt="image-20240809111647352"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809112113964.png" alt="image-20240809112113964"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809112439344.png" alt="image-20240809112439344"></p><h3 id="4-算法与算法分析"><a href="#4-算法与算法分析" class="headerlink" title="4.算法与算法分析"></a>4.算法与算法分析</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809114632119.png" alt="image-20240809114632119"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809114742686.png" alt="image-20240809114742686"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809114830451.png" alt="image-20240809114830451"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809114852812.png" alt="image-20240809114852812"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809114918839.png" alt="image-20240809114918839"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809114958572.png" alt="image-20240809114958572"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809115047440.png" alt="image-20240809115047440"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809120928977.png" alt="image-20240809120928977"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809121041066.png" alt="image-20240809121041066"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809121757345.png" alt="image-20240809121757345"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809122748065.png" alt="image-20240809122748065"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809122843273.png" alt="image-20240809122843273"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809124348984.png" alt="image-20240809124348984"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809125308324.png" alt="image-20240809125308324"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809125324075.png" alt="image-20240809125324075"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809130417230.png" alt="image-20240809130417230"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809130603115.png" alt="image-20240809130603115"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809131319563.png" alt="image-20240809131319563"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809132704046.png" alt="image-20240809132704046"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809132906500.png" alt="image-20240809132906500"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809133950192.png" alt="image-20240809133950192"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809134042518.png" alt="image-20240809134042518"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809134317891.png" alt="image-20240809134317891"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809134522393.png" alt="image-20240809134522393"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240809134638022.png" alt="image-20240809134638022"></p><p>##二.线性表</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>初始格式</title>
      <link href="/2025/10/08/%E5%88%9D%E5%A7%8B%E6%A0%BC%E5%BC%8F/"/>
      <url>/2025/10/08/%E5%88%9D%E5%A7%8B%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="初始格式"><a href="#初始格式" class="headerlink" title="初始格式"></a>初始格式</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/10/08/Untitled/"/>
      <url>/2025/10/08/Untitled/</url>
      
        <content type="html"><![CDATA[<h1 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h1><p>dll库</p><p>so库</p><p>接口</p><p>功能插件</p><p>dll注入</p><p>安卓：</p><p>class</p><p>so</p><p>数据协议读取SQL：</p><p>xml，yml，protobuffer</p><p>pak解包：</p><p>Fmodel</p><p>Umodel</p><p>修改游戏内：</p><p>解包lua，修改再打包为热更补丁</p><p>解包为uProject，放到源码版本的ue去做</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Unity2D</title>
      <link href="/2025/10/08/Unity2D/"/>
      <url>/2025/10/08/Unity2D/</url>
      
        <content type="html"><![CDATA[<h1 id="Unity2D"><a href="#Unity2D" class="headerlink" title="Unity2D"></a>Unity2D</h1><p>###1.unity导入帧序列动画</p><p>绘制像素动画的软件：Aseprite</p><p>导入帧序列动画：</p><p>1.拖动png进unity软件</p><p>2.图片的预处理。右边状态栏的sprite模式改为<u>多个</u>,每单位像素数为<u>16</u>，过滤模式改为<u>点（过滤器）</u>，压缩改为<u>无</u>。</p><p>3.切图片上的像素图。点击<u>打开Sprite编辑器</u>，点开左上角的<u>切片</u>，点击<u>类型</u>，点击<u>grid by cell size</u>,像素大小<u>X:64 Y:32</u>,点击<u>切片</u>，点击右上角<u>应用</u>，然后关闭。</p><p>4.添加Idle动画。拖动第一张图片进<u>SampleScene</u>，将playersheet_0重命名为Player。选中第1~第2张图片（编号为0-1），拖动到Player，重命名为Idle.anim。</p><p>5.添加run动画。选中第3~第6张（编号为2-5）图片，拖动到Player，重命名为run.anim。</p><p>6.添加attack动画。选中第7~第12张（编号为6-11）。剩下略。</p><p>7.添加hit(受击)动画。选中第13~第16张（编号为12-15）。剩下略。</p><p>8.添加jump动画。选中第17~第18张（编号为16-17）。剩下略。</p><p>9.添加fall，climb，death动画。</p><h3 id="2-实现左右移动"><a href="#2-实现左右移动" class="headerlink" title="2.实现左右移动"></a>2.实现左右移动</h3><p>实现左右移动</p><p>1.拖动ground的png进unity软件。</p><p>2.图片的预处理。右边状态栏的sprite模式改为<u>单一</u>,每单位像素数为<u>16</u>，过滤模式改为<u>点（过滤器）</u>，压缩改为<u>无</u>。</p><p>3.创建移动脚本。点击Player。Assets中创建C#脚本，命名为<u>Playercontroller</u>。在Player中添加组件，名字是<u>RigidBody2D</u>。碰撞检测改为<u>持续</u>，休眠模式改为<u>从不休眠</u>，点击Constrains，选中<u>冻结旋转</u>。</p><p>4.创建碰撞。在Player中添加组件，名字是<u>Capsule Collider2D</u>。点击编辑碰撞器。拖动光标把胶囊体贴在模型周身。在Player中添加组件，名字是<u>BoxCollider2D</u>。点击编辑碰撞器。拖动光标把范围贴在模型脚步左右。选中<u>是触发器</u>。</p><p>5.地面碰撞。点击Ground。在Ground中添加组件，名字是<u>BoxCollider2D</u>。</p><p>6.编写移动脚本。在Assets中点击Playercontroller脚本。</p><p>7.把PlayerController拖到Player上，将速度赋值为5。</p><h3 id="3-在Player时切换Idle和Run"><a href="#3-在Player时切换Idle和Run" class="headerlink" title="3.在Player时切换Idle和Run"></a>3.在Player时切换Idle和Run</h3><p>1.unity最上角窗口——&gt;动画——&gt;动画器。点击Player，稍微整理界面ui，右击idle，点击<u>创建过渡</u>指向run。创建bool类型的参数，名字是<u>Run</u>。点击idle向run过渡的箭头，在Conditions下添加变量run，值为true，上方Settings中，不勾选<u>有退出时间</u>，并且将过渡持续时间设置为0。</p><p>右击run，点击<u>创建过渡</u>指向idle。在Conditions下添加变量run，值为false。上方Settings中，不勾选<u>有退出时间</u>，并且将过渡持续时间设置为0。</p><p>在Assets中点击Playercontroller脚本。</p><h3 id="4-在Player时实现jump功能"><a href="#4-在Player时实现jump功能" class="headerlink" title="4.在Player时实现jump功能"></a>4.在Player时实现jump功能</h3><p>1.在Assets中点击Playercontroller脚本，编写jump功能。</p><p>2.把Player的PlayerController中，将跳跃速度赋值为6。</p><p>3.检测，只有角色接触到地面才可以跳跃，不会无限跳跃。点击ground，在右边图层栏中选择添加<u>图层</u>，在User Layer中添加为Ground。unity最上角窗口——&gt;常规——&gt;控制台，把控制台放到场景同行。点击ground，在右边图层栏中选择Ground,点击执行，如果与地面接触返回true，不接触false(脚本写好的)。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/10/08/thinking/"/>
      <url>/2025/10/08/thinking/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/10/08/SpringBoot/"/>
      <url>/2025/10/08/SpringBoot/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h1><p>##目录</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905114505892.png" alt="image-20240905114505892"></p><p>##基础篇</p><p>###1.概述</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905101921739.png" alt="image-20240905101921739"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905102319744.png" alt="image-20240905102319744"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905102445117.png" alt="image-20240905102445117"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905102807415.png" alt="image-20240905102807415"> </p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905103100840.png" alt="image-20240905103100840"></p><h3 id="2-入门"><a href="#2-入门" class="headerlink" title="2.入门"></a>2.入门</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905103218452.png" alt="image-20240905103218452"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905104336288.png" alt="image-20240905104336288"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905113642816.png" alt="image-20240905113642816"></p><h3 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h3><p>####1.配置文件的基本使用</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905114707169.png" alt="image-20240905114707169"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905114725719.png" alt="image-20240905114725719"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905114842621.png" alt="image-20240905114842621"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905115153185.png" alt="image-20240905115153185"></p><h4 id="2-yml配置信息的书写和获取"><a href="#2-yml配置信息的书写和获取" class="headerlink" title="2.yml配置信息的书写和获取"></a>2.yml配置信息的书写和获取</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905120222184.png" alt="image-20240905120222184"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905120929009.png" alt="image-20240905120929009"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905121314274.png" alt="image-20240905121314274"></p><p>获取：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905122103123.png" alt="image-20240905122103123"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905122812278.png" alt="image-20240905122812278"></p><p>###4.整合mybatis</p><p>引入mybatis的起步依赖就是把依赖都整合引入</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905123229724.png" alt="image-20240905123229724"></p><h3 id="5-Bean管理"><a href="#5-Bean管理" class="headerlink" title="5.Bean管理"></a>5.Bean管理</h3><h4 id="1-Bean扫描"><a href="#1-Bean扫描" class="headerlink" title="1.Bean扫描"></a>1.Bean扫描</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905184849668.png" alt="image-20240905184849668"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240905184812252.png" alt="image-20240905184812252"></p><h4 id="2-Bean扫描"><a href="#2-Bean扫描" class="headerlink" title="2.Bean扫描"></a>2.Bean扫描</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240906210124754.png" alt="image-20240906210124754"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240906210232309.png" alt="image-20240906210232309"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240906214735063.png" alt="image-20240906214735063"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240906222644388.png" alt="image-20240906222644388"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/10/08/QT/"/>
      <url>/2025/10/08/QT/</url>
      
        <content type="html"><![CDATA[<h1 id="QT"><a href="#QT" class="headerlink" title="QT"></a>QT</h1><p><a href="https://subingwen.cn/qt/">Qt 教程 | 爱编程的大丙 (subingwen.cn)</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/10/08/MySQL/"/>
      <url>/2025/10/08/MySQL/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><p>#课程大纲</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240727210200523.png" alt="image-20240727210200523"></p><h1 id="一-基础篇"><a href="#一-基础篇" class="headerlink" title="一.基础篇"></a>一.基础篇</h1><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240727210836471.png" alt="image-20240727210836471"></p><h4 id="一-MySQL概述"><a href="#一-MySQL概述" class="headerlink" title="一.MySQL概述"></a>一.MySQL概述</h4><p>####1.数据库概念</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240727210952899.png" alt="image-20240727210952899"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240727211142293.png" alt="image-20240727211142293"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240727211305293.png" alt="image-20240727211305293"></p><p>MySQL安装与数据库</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/10/08/List/"/>
      <url>/2025/10/08/List/</url>
      
        <content type="html"><![CDATA[<p>##目录</p><h3 id="一-Apk"><a href="#一-Apk" class="headerlink" title="一.Apk"></a>一.Apk</h3><p>###二.Cures</p><p>####1.  v1.0.0.4</p><p>{<br>  “filelist”: [<br>    {<br>      “bkcurl”: “<a href="https://down.ngr.qq.com/package/259156973/1001558/cures/1.1.0.4/259156973_1001558_1.1.0.4_20230804233723_1380879832_cures.ifs.cures">https://down.ngr.qq.com/package/259156973/1001558/cures/1.1.0.4/259156973_1001558_1.1.0.4_20230804233723_1380879832_cures.ifs.cures</a>“,<br>      “bkurl”: “<a href="https://down.ngr.qq.com/package/259156973/1001558/cures/1.1.0.4/259156973_1001558_1.1.0.4_20230804233723_1380879832_cures.ifs">https://down.ngr.qq.com/package/259156973/1001558/cures/1.1.0.4/259156973_1001558_1.1.0.4_20230804233723_1380879832_cures.ifs</a>“,<br>      “cfilesize”: 1193449,<br>      “cmd5”: “f50c9793269b776ed2b9db4a976754b7”,<br>      “curl”: “<a href="http://down.ngr.qq.com/package/259156973/1001558/cures/1.1.0.4/259156973_1001558_1.1.0.4_20230804233723_1380879832_cures.ifs.cures">http://down.ngr.qq.com/package/259156973/1001558/cures/1.1.0.4/259156973_1001558_1.1.0.4_20230804233723_1380879832_cures.ifs.cures</a>“,<br>      “filename”: “259156973_1001558_1.1.0.4_20230804233723_1380879832_cures.ifs”,<br>      “filesize”: 561324241,<br>      “md5”: “f35ad39e63b05dd15ba7279f29d19d84”,<br>      “url”: “<a href="http://down.ngr.qq.com/package/259156973/1001558/cures/1.1.0.4/259156973_1001558_1.1.0.4_20230804233723_1380879832_cures.ifs">http://down.ngr.qq.com/package/259156973/1001558/cures/1.1.0.4/259156973_1001558_1.1.0.4_20230804233723_1380879832_cures.ifs</a>“,<br>      “ver”: “1.1.0.4”<br>    }<br>  ],<br>  “predownload”: “false”<br>}</p><h3 id="三-Custom（pak资源包）"><a href="#三-Custom（pak资源包）" class="headerlink" title="三. Custom（pak资源包）"></a>三. Custom（pak资源包）</h3><p>####1.v1.0.0.2</p><p><a href="https://image.ngr.qq.com/259156973/1001558/custom/1.1.0.2/Paks_1.1.0.2_356fb6637fb35bbb1fad1eab6c754424.zip">https://image.ngr.qq.com/259156973/1001558/custom/1.1.0.2/Paks_1.1.0.2_356fb6637fb35bbb1fad1eab6c754424.zip</a></p><p>####2.v1.0.0.4</p><p><a href="https://image.ngr.qq.com/259156973/1001558/custom/1.1.0.4/Paks_1.1.0.4_356fb6637fb35bbb1fad1eab6c754424.zip">https://image.ngr.qq.com/259156973/1001558/custom/1.1.0.4/Paks_1.1.0.4_356fb6637fb35bbb1fad1eab6c754424.zip</a></p><p>3.v</p><h3 id="四-qtsdiff（版本升级替换资源包）"><a href="#四-qtsdiff（版本升级替换资源包）" class="headerlink" title="四.qtsdiff（版本升级替换资源包）"></a>四.qtsdiff（版本升级替换资源包）</h3><p>####1.v1.0.0.2 to v1.0.0.4</p><p><a href="https://image.ngr.qq.com/259156973/1001558/custom/1.1.0.4/qtspak_1.1.0.2_1.1.0.4_diff_2d887af8fe72ba69d6c155f95779558e.zip">https://image.ngr.qq.com/259156973/1001558/custom/1.1.0.4/qtspak_1.1.0.2_1.1.0.4_diff_2d887af8fe72ba69d6c155f95779558e.zip</a></p><h3 id="五-PC端"><a href="#五-PC端" class="headerlink" title="五.PC端"></a>五.PC端</h3><p>####1.ver1.0.0.147</p><p><a href="http://down.ngr.qq.com/package/259156973/1001560/cures/1.0.0.147/259156973_1001560_1.0.0.147_20230805002813_458756874_cures.ifs">http://down.ngr.qq.com/package/259156973/1001560/cures/1.0.0.147/259156973_1001560_1.0.0.147_20230805002813_458756874_cures.ifs</a></p><p>####2.ver1.0.0.181</p><p><a href="http://down.ngr.qq.com/package/259156973/1001560/cures/1.0.0.181/259156973_1001560_1.0.0.181">http://down.ngr.qq.com/package/259156973/1001560/cures/1.0.0.181/259156973_1001560_1.0.0.181</a>_  _cures.ifs</p><p>###3.ver1.0.0.511</p><p><a href="http://down.ngr.qq.com/package/259156973/1001550/cures/1.0.0.511/259156973_1001550_1.0.0.511_20230821160032_987753210_cures.ifs">http://down.ngr.qq.com/package/259156973/1001550/cures/1.0.0.511/259156973_1001550_1.0.0.511_20230821160032_987753210_cures.ifs</a></p><p>4.ver1.0.0.32</p><p><a href="https://game-70798.njc.vod.tencent-cloud.com/package/259156973/2401094/res/1.0.0.32/259156973_2401094_1.0.0.32_20250722062042_940104511_res.cures">https://game-70798.njc.vod.tencent-cloud.com/package/259156973/2401094/res/1.0.0.32/259156973_2401094_1.0.0.32_20250722062042_940104511_res.cures</a></p><p>###六.线</p><p>####1.</p><p>18cfcbccef54a79bf177b811bd9e435f</p><p>pre-download.259156973-1-2.gcloudsvcs.com</p><p>1000558</p><p>Jf8sG2kD9vQ5rU1aX3mZ0tY6hE7oL4nBwC</p><p>18cfcbccef54a79bf177b811bd9e435f</p><p>0x3E89975D88CB39AC1404BFB825D902AAEC068946E6A743C4AFD9B762B9203274</p><p>01 00 00 02 01 02 03 04  B4 A1 20 01 00 C0 20 01</p><p>01 00 00 02 01 02 03 04  3C 09 80 0C 00 40 80 0C</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/10/08/GameDesign/"/>
      <url>/2025/10/08/GameDesign/</url>
      
        <content type="html"><![CDATA[<h1 id="一-原型（Prototype）"><a href="#一-原型（Prototype）" class="headerlink" title="一.原型（Prototype）"></a>一.原型（Prototype）</h1><h2 id="一-玩法功能"><a href="#一-玩法功能" class="headerlink" title="一.玩法功能"></a>一.玩法功能</h2><h3 id="1-玩家出生点-NetworkPlayerStart"><a href="#1-玩家出生点-NetworkPlayerStart" class="headerlink" title="1.玩家出生点:NetworkPlayerStart"></a>1.玩家出生点:NetworkPlayerStart</h3><h3 id="2-第三人称角色ThirdPersonCharacter-自身"><a href="#2-第三人称角色ThirdPersonCharacter-自身" class="headerlink" title="2.第三人称角色ThirdPersonCharacter(自身)"></a>2.第三人称角色ThirdPersonCharacter(自身)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">角色：</span><br><span class="line">胶囊体组件:Collision Cylinder（继承）</span><br><span class="line"></span><br><span class="line">​网格体：CharacterMesh（继承）</span><br><span class="line"></span><br><span class="line">​弹簧臂组件：CameraBoom(继承)</span><br><span class="line"></span><br><span class="line">​摄像机:FollowCamera(继承)</span><br><span class="line"></span><br><span class="line">移动：</span><br><span class="line">角色移动:CharMove Comp</span><br></pre></td></tr></table></figure><h2 id="二-美术资源"><a href="#二-美术资源" class="headerlink" title="二.美术资源"></a>二.美术资源</h2><p>##三.资源优化</p><h2 id="四-项目管理与移植"><a href="#四-项目管理与移植" class="headerlink" title="四.项目管理与移植"></a>四.项目管理与移植</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/10/08/C51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
      <url>/2025/10/08/C51%E5%8D%95%E7%89%87%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>#C51单片机</p><h2 id="一-单片机介绍"><a href="#一-单片机介绍" class="headerlink" title="一.单片机介绍"></a>一.单片机介绍</h2><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711133804294.png" alt="image-20240711133804294"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711134302349.png" alt="image-20240711134302349"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711134324329.png" alt="image-20240711134324329"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711135208019.png" alt="image-20240711135208019"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711135548666.png" alt="image-20240711135548666"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711135624107.png" alt="image-20240711135624107"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711144353712.png" alt="image-20240711144353712"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711144445276.png" alt="image-20240711144445276"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711144522868.png" alt="image-20240711144522868"></p><h2 id="二-LED灯入门"><a href="#二-LED灯入门" class="headerlink" title="二.LED灯入门"></a>二.LED灯入门</h2><h3 id="1-点亮一个LED灯"><a href="#1-点亮一个LED灯" class="headerlink" title="1.点亮一个LED灯"></a>1.点亮一个LED灯</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711150338304.png" alt="image-20240711150338304"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711152928879.png" alt="image-20240711152928879"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711153012031.png" alt="image-20240711153012031"></p><h4 id="1-点亮"><a href="#1-点亮" class="headerlink" title="1.点亮"></a>1.点亮</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">P2=<span class="number">0x55</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711153217214.png"></p><h4 id="2-闪烁"><a href="#2-闪烁" class="headerlink" title="2.闪烁"></a>2.闪烁</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;INTRINS.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay500ms</span><span class="params">(<span class="type">void</span>)</span><span class="comment">//@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j, k;</span><br><span class="line"></span><br><span class="line">_nop_();</span><br><span class="line">i = <span class="number">4</span>;</span><br><span class="line">j = <span class="number">205</span>;</span><br><span class="line">k = <span class="number">187</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--k);</span><br><span class="line">&#125; <span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">P2=<span class="number">0xFE</span>;</span><br><span class="line">Delay500ms();</span><br><span class="line">P2=<span class="number">0xFF</span>;</span><br><span class="line">Delay500ms();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-流水灯"><a href="#3-流水灯" class="headerlink" title="3.流水灯"></a>3.流水灯</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711165607639.png" alt="image-20240711165607639"></p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> xms)</span><span class="comment">//@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"><span class="keyword">while</span>(xms)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">xms--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">P2=<span class="number">0xFE</span>;</span><br><span class="line">Delay1ms(<span class="number">100</span>);</span><br><span class="line">P2=<span class="number">0xFD</span>;</span><br><span class="line">Delay1ms(<span class="number">100</span>);</span><br><span class="line">P2=<span class="number">0xFB</span>;</span><br><span class="line">Delay1ms(<span class="number">100</span>);</span><br><span class="line">P2=<span class="number">0xF7</span>;</span><br><span class="line">Delay1ms(<span class="number">100</span>);</span><br><span class="line">P2=<span class="number">0xEF</span>;</span><br><span class="line">Delay1ms(<span class="number">100</span>);</span><br><span class="line">P2=<span class="number">0xDF</span>;</span><br><span class="line">Delay1ms(<span class="number">100</span>);</span><br><span class="line">P2=<span class="number">0xBF</span>;</span><br><span class="line">Delay1ms(<span class="number">100</span>);</span><br><span class="line">P2=<span class="number">0x7F</span>;</span><br><span class="line">Delay1ms(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三-独立按键"><a href="#三-独立按键" class="headerlink" title="三.独立按键"></a>三.独立按键</h2><h3 id="1-独立按键控制灯"><a href="#1-独立按键控制灯" class="headerlink" title="1.独立按键控制灯"></a>1.独立按键控制灯</h3><p>####1.点亮</p><p>![屏幕截图 2024-07-11 171947](C:\Users\86187\Pictures\Screenshots\屏幕截图 2024-07-11 171947.png)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span> </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(P3_1==<span class="number">0</span> || P3_0==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">P2_0=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">P2_0=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####2.按键取反</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240711213248195.png" alt="image-20240711213248195"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> xms)</span><span class="comment">//@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"><span class="keyword">while</span>(xms)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">xms--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(P3_1==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">while</span>(P3_1==<span class="number">0</span>);</span><br><span class="line">Delay(<span class="number">20</span>);</span><br><span class="line">  P2_0=~P2_0 ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-LED控制二进制"><a href="#3-LED控制二进制" class="headerlink" title="3.LED控制二进制"></a>3.LED控制二进制</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> xms)</span><span class="comment">//@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"><span class="keyword">while</span>(xms)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">xms--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> LEDNum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(P3_1==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay(<span class="number">20</span>);</span><br><span class="line">  <span class="keyword">if</span>(P3_1==<span class="number">0</span>);</span><br><span class="line">Delay(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">LEDNum++;</span><br><span class="line">P2=~LEDNum;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-LED移位"><a href="#4-LED移位" class="headerlink" title="4.LED移位"></a>4.LED移位</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> xms)</span><span class="comment">//@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> data i, j;</span><br><span class="line"><span class="keyword">while</span>(xms)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">xms--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> LEDNum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(P3_1==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">while</span>(P3_1==<span class="number">0</span>);</span><br><span class="line">Delay(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">LEDNum++;</span><br><span class="line"><span class="keyword">if</span>(LEDNum&gt;=<span class="number">8</span>)</span><br><span class="line">LEDNum=<span class="number">0</span>; </span><br><span class="line">P2=~(<span class="number">0x01</span>&lt;&lt;LEDNum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(P3_0==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">while</span>(P3_0==<span class="number">0</span>);</span><br><span class="line">Delay(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(LEDNum==<span class="number">0</span>)</span><br><span class="line">LEDNum=<span class="number">7</span>; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">LEDNum--;</span><br><span class="line">&#125; </span><br><span class="line">P2=~(<span class="number">0x01</span>&lt;&lt;LEDNum);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##四.数码管入门</p><h3 id="1-数码管显示"><a href="#1-数码管显示" class="headerlink" title="1.数码管显示"></a>1.数码管显示</h3><h4 id="1-数码管"><a href="#1-数码管" class="headerlink" title="1.数码管"></a>1.数码管</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240712221318599.png" alt="image-20240712221318599"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240712221428057.png" alt="image-20240712221428057"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240712221828323.png" alt="image-20240712221828323"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240712222914994.png" alt="image-20240712222914994"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240712223507719.png" alt="image-20240712223507719"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240712223706834.png" alt="image-20240712223706834"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240712225247826.png" alt="image-20240712225247826"></p><h4 id="2-静态数码管显示"><a href="#2-静态数码管显示" class="headerlink" title="2.静态数码管显示"></a>2.静态数码管显示</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> NiXieTable[]=&#123;<span class="number">0x3F</span>,<span class="number">0x06</span>,<span class="number">0x5B</span>,<span class="number">0x4F</span>,<span class="number">0x66</span>,<span class="number">0x6D</span>,<span class="number">0x7D</span>,<span class="number">0x07</span>,<span class="number">0x7F</span>,<span class="number">0x6F</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">NiXie</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> Location,Number)</span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(Location)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">  P0 =NiXieTable[Number] ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span> <span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">NiXie(<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####3.动态数码管显示</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240713002640427.png" alt="image-20240713002640427"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240713003012872.png" alt="image-20240713003012872"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C++</title>
      <link href="/2025/10/08/C++/"/>
      <url>/2025/10/08/C++/</url>
      
        <content type="html"><![CDATA[<p>#C++</p><h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><h3 id="一-C-初见"><a href="#一-C-初见" class="headerlink" title="一.C++初见"></a>一.C++初见</h3><p>####1.打印Hello World</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello World&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####2.注释</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719154029937.png" alt="image-20240719154029937"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//单行注释</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    多行注释</span></span><br><span class="line"><span class="comment">    ddd</span></span><br><span class="line"><span class="comment">    wwwwww</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####3.变量</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719160057194.png" alt="image-20240719160057194"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a =&quot;</span> &lt;&lt; a ;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####4.常量</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719182528938.png" alt="image-20240719182528938"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 365</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> mouth = <span class="number">12</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;一年有&quot;</span> &lt;&lt; mouth &lt;&lt; <span class="string">&quot;月&quot;</span> &lt;&lt; <span class="string">&quot;，一年有&quot;</span>&lt;&lt;day&lt;&lt;<span class="string">&quot;天&quot;</span>&lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####5.关键字</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719183853989.png" alt="image-20240719183853989"></p><p>####6.标识符命名规则</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719184022128.png" alt="image-20240719184022128"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> abc = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> _abc = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> _123abc = <span class="number">30</span>;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719185323731.png" alt="image-20240719185323731"></p><p>###二.数据类型</p><p>####1.整型</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719185656929.png" alt="image-20240719185656929"></p><p>注：1.一个字节8个比特</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//短整型</span></span><br><span class="line">    <span class="type">short</span> num1 = <span class="number">32768</span>;</span><br><span class="line">    <span class="comment">//整型</span></span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">32768</span>;</span><br><span class="line">    <span class="comment">//长整型</span></span><br><span class="line">    <span class="type">long</span> num3 = <span class="number">123</span>;</span><br><span class="line">    <span class="comment">//长长整形</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> num4 = <span class="number">123</span>;</span><br><span class="line">    cout &lt;&lt; num1 &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; num2 &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; num3 &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; num4 &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####2.sizeof关键字</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719191350177.png" alt="image-20240719191350177"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;short 类型占用的内存空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;int 类型占用的内存空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span>) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;long 类型占用的内存空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;long long 类型占用的内存空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;变量b占用的内存空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(b) &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><p>short  &lt;  int  &lt;&#x3D;  long  &lt;&#x3D;  long long</p><p>####3.浮点型</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719204537889.png" alt="image-20240719204537889"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> sum1 = <span class="number">3.1415926f</span>;</span><br><span class="line">    <span class="type">double</span> sum2 = <span class="number">3.1415926</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;sum1 的值是&quot;</span> &lt;&lt; sum1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;sum2 的值是&quot;</span> &lt;&lt; sum2 &lt;&lt; endl;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">//默认情况下输出小数显示六位有效数字</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;float占据空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">float</span>) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;double占据空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> num3 = <span class="number">2e3</span>;<span class="comment">//2x10^3</span></span><br><span class="line">    cout &lt;&lt; num3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> num4 = <span class="number">3e-2</span>;<span class="comment">//3x0.1^2</span></span><br><span class="line">    cout &lt;&lt; num4 &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####4.字符型</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719210429072.png" alt="image-20240719210429072"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; ch &lt;&lt; endl;     </span><br><span class="line">    cout &lt;&lt; <span class="built_in">int</span>(ch) &lt;&lt; endl;   <span class="comment">//查看char字符所代表的ASCII码</span></span><br><span class="line">    cout &lt;&lt; <span class="built_in">sizeof</span>(ch) &lt;&lt; endl;<span class="comment">//字符的尺寸大小</span></span><br><span class="line"></span><br><span class="line">    ch = <span class="number">98</span>;</span><br><span class="line">    cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719211440904.png" alt="image-20240719211440904"></p><p>####5.转义字符</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719212447322.png" alt="image-20240719212447322"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719213456870.png" alt="image-20240719213456870"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719213509058.png" alt="image-20240719213509058"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 换行符</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello World\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">         &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反斜杆</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 水平制表符 \t</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;aaa\tHelloWorld&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;aaaaa\tHelloWorld&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a\tHelloWorld&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####6.字符串类型</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719214001665.png" alt="image-20240719214001665"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719214712480.png" alt="image-20240719214712480"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719214718602.png" alt="image-20240719214718602"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span><span class="comment">//部分高版本中不需要添加，低版本需要</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//C风格字符串</span></span><br><span class="line">    <span class="type">char</span> str1[] = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">    cout &lt;&lt; str1&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//C++风格字符串</span></span><br><span class="line">    string str2 = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">    cout &lt;&lt; str2 &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####7.布尔类型</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719214835896.png" alt="image-20240719214835896"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">bool</span> Flag = <span class="literal">false</span>;</span><br><span class="line">    cout &lt;&lt; Flag &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//false代表0，true代表1</span></span><br><span class="line">    Flag = <span class="literal">true</span>;</span><br><span class="line">    cout &lt;&lt; Flag &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//flag占用内存空间为一个字节</span></span><br><span class="line">    cout &lt;&lt; <span class="built_in">sizeof</span>(Flag) &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####8.数据的输入</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719215450906.png" alt="image-20240719215450906"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719222031344.png" alt="image-20240719222031344"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 1.整型输入</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入整型变量的值:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.浮点型输入</span></span><br><span class="line">    <span class="type">double</span> b = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入浮点型变量的值:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.字符型</span></span><br><span class="line">    <span class="type">char</span> c = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入字符型变量的值:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; c;</span><br><span class="line">    cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.字符串型</span></span><br><span class="line">    string d = <span class="string">&quot;Hello String&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入字符串型变量的值:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; d;</span><br><span class="line">    cout &lt;&lt; d &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.布尔类型</span></span><br><span class="line">    <span class="type">bool</span> e = <span class="literal">false</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入布尔型变量的值:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; e;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;e的值为&quot;</span> &lt;&lt; e &lt;&lt; endl;</span><br><span class="line">    <span class="comment">// 当用cin方法为bool类型数赋值为true，系统判断为字符串true，则e的值为0.</span></span><br><span class="line">    <span class="comment">// bool类型只要非0，就是1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：1.当用cin方法为bool类型数赋值为true，系统判断为字符串true，则e的值为0.</p><p>​2.bool类型只要非0，就是1</p><p>###三.运算符</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719222859664.png" alt="image-20240719222859664"></p><p>####1.四则运算</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719222943767.png" alt="image-20240719222943767"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240719223840252.png" alt="image-20240719223840252"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 加减乘除</span></span><br><span class="line">    <span class="type">int</span> a1 = <span class="number">200</span>;</span><br><span class="line">    <span class="type">int</span> b1 = <span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; a1 + b1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a1 - b1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a1 * b1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a1 / b1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a1 % b1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     int a1 = 200;</span></span><br><span class="line"><span class="comment">     int b1 = 0;</span></span><br><span class="line"><span class="comment">     cout &lt;&lt; a1 / b1 &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> c1 = <span class="number">0.5</span>;</span><br><span class="line">    <span class="type">double</span> c2 = <span class="number">0.25</span>;</span><br><span class="line">    cout &lt;&lt; c1 / c2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-取余运算"><a href="#2-取余运算" class="headerlink" title="2.取余运算"></a>2.取余运算</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728132330238.png" alt="image-20240728132330238"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">3</span>;</span><br><span class="line">    cout &lt;&lt; a % b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b2 = <span class="number">20</span>;</span><br><span class="line">    cout &lt;&lt; a2 % b2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b3 = <span class="number">0</span>;</span><br><span class="line">   <span class="comment">// cout &lt;&lt; a3 % b3 &lt;&lt; endl;</span></span><br><span class="line">   <span class="comment">//除数不为0</span></span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> b1 = <span class="number">3.14159</span>;</span><br><span class="line">    <span class="type">double</span> b2 = <span class="number">2.1</span>;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; b1 % b2 &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//不允许两个小数做取模运算</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-递增递减运算"><a href="#3-递增递减运算" class="headerlink" title="3.递增递减运算"></a>3.递增递减运算</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728132431623.png" alt="image-20240728132431623"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728133444636.png" alt="image-20240728133444636"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    ++a;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line">    b++;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b=&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b2 = ++a2 * <span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a2=&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b2=&quot;</span> &lt;&lt; b2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b3 = a3++ * <span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a3=&quot;</span> &lt;&lt; a3 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b3=&quot;</span> &lt;&lt; b3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-赋值运算符"><a href="#4-赋值运算符" class="headerlink" title="4.赋值运算符"></a>4.赋值运算符</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728133751391.png" alt="image-20240728133751391"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728134201707.png" alt="image-20240728134201707"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//赋值运算符</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    a = <span class="number">100</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a += <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a2=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a -= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a3=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a *= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a3=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a /= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a3=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a %= <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a3=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-比较运算符"><a href="#5-比较运算符" class="headerlink" title="5.比较运算符"></a>5.比较运算符</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728134305404.png" alt="image-20240728134305404"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728134830722.png" alt="image-20240728134830722"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 赋值运算符</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b1 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; (a1 == b1) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; (a1 != b1) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; (a1 &gt; b1) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; (a1 &lt; b1) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; (a1 &gt;= b1) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; (a1 &lt;= b1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-逻辑运算符"><a href="#6-逻辑运算符" class="headerlink" title="6.逻辑运算符"></a>6.逻辑运算符</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728134920526.png" alt="image-20240728134920526"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728135410353.png" alt="image-20240728135410353"></p><p>非</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728135513160.png" alt="image-20240728135513160"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//非</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; !a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; !!a &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728140328538.png" alt="image-20240728140328538"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//与</span></span><br><span class="line">  <span class="type">int</span> a10 = <span class="number">10</span>;</span><br><span class="line">  <span class="type">int</span> b10 = <span class="number">10</span>;</span><br><span class="line">  cout &lt;&lt; (a10 &amp;&amp; b10) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">  <span class="type">int</span> a11 = <span class="number">10</span>;</span><br><span class="line">  <span class="type">int</span> b11 = <span class="number">0</span>;</span><br><span class="line">  cout &lt;&lt; (a11 &amp;&amp; b11) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">  <span class="type">int</span> a12 = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> b12 = <span class="number">0</span>;</span><br><span class="line">  cout &lt;&lt; (a12 &amp;&amp; b12) &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>或</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240728140434900.png" alt="image-20240728140434900"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//或</span></span><br><span class="line"><span class="type">int</span> a20 = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> b20 = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; (a20 ||b20) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a21 = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> b21 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; (a21 || b21) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a22 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> b22 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; (a22 || b22) &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h3 id="四-流程结构"><a href="#四-流程结构" class="headerlink" title="四.流程结构"></a>四.流程结构</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729094529170.png" alt="image-20240729094529170"></p><h4 id="1-选择结构"><a href="#1-选择结构" class="headerlink" title="1.选择结构"></a>1.选择结构</h4><p>#####1.if语句</p><p>单行if语句</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729094750236.png" alt="image-20240729094750236"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729095511162.png" alt="image-20240729095511162"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//if语句</span></span><br><span class="line">    <span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;您的分数为：&quot;</span>&lt;&lt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(score&gt;<span class="number">600</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考入一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多行if语句</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729095631497.png" alt="image-20240729095631497"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729095843727.png" alt="image-20240729095843727"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;请输入分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">   cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;您的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       cout &lt;&lt; <span class="string">&quot;恭喜您考入一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">       cout &lt;&lt; <span class="string">&quot;很遗憾没有考上一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>多条件if语句</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729100510203.png" alt="image-20240729100510203"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729101029633.png" alt="image-20240729101029633"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;您的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考入一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(score&gt;<span class="number">500</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考入二本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考入三本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;再接再厉&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>嵌套if语句</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//嵌套if语句</span></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">700</span>)</span><br><span class="line">    &#123;   </span><br><span class="line">         cout &lt;&lt; <span class="string">&quot;恭喜您考入北京大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">650</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考入清华大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考入人民大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;恭喜您考入二本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;恭喜您考入三本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;再接再厉&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例1：三只小猪</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729102137285.png" alt="image-20240729102137285"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> A, B, C = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入小猪A的体重：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; A;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入小猪B的体重：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; B;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入小猪C的体重：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; C;</span><br><span class="line">    <span class="keyword">if</span>(A&gt;=B)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(A&gt;=C)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;A的体重最重，为&quot;</span> &lt;&lt; A &lt;&lt; <span class="string">&quot;千克&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;C的体重最重，为&quot;</span> &lt;&lt; C &lt;&lt; <span class="string">&quot;千克&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (B &gt;= C)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;B的体重最重，为&quot;</span> &lt;&lt; B &lt;&lt; <span class="string">&quot;千克&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;C的体重最重，为&quot;</span> &lt;&lt; C &lt;&lt; <span class="string">&quot;千克&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三目运算符</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729103902087.png" alt="image-20240729103902087"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>, b = <span class="number">3</span>, c = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line">    c = (a &gt; b ? a : b);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;c=&quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729104517519.png" alt="image-20240729104517519"></p><h5 id="2-switch语句"><a href="#2-switch语句" class="headerlink" title="2.switch语句"></a>2.switch语句</h5><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729104622357.png" alt="image-20240729104622357"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729105933714.png" alt="image-20240729105933714"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//switch语句</span></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给电影打分&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"><span class="keyword">switch</span>(score)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;这是经典电影&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;这是经典电影&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;这是挺好的电影&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;这是挺好的电影&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;这是一般的电影&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;这是一般的电影&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;这是烂片&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-循环结构"><a href="#2-循环结构" class="headerlink" title="2.循环结构"></a>2.循环结构</h4><h5 id="1-while循环"><a href="#1-while循环" class="headerlink" title="1.while循环"></a>1.while循环</h5><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729110636376.png" alt="image-20240729110636376"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729113807008.png" alt="image-20240729113807008"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(num&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;num=&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例1：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729114025827.png" alt="image-20240729114025827"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729114354222.png" alt="image-20240729114354222"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> num1 = <span class="built_in">rand</span>() % <span class="number">100</span> ; <span class="comment">// 生成0~99的随机数</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//time时间系统包含</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加随机数生成种子</span></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//time时间系统包含</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//添加随机数生成种子</span></span><br><span class="line">    <span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> num1 = <span class="built_in">rand</span>() % <span class="number">100</span> + <span class="number">1</span>; <span class="comment">// 生成1~100的随机数</span></span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入猜测数字：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; num2;</span><br><span class="line">        <span class="keyword">if</span> (num1 != num2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (num1 &gt; num2)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;您输入的数过小&quot;</span> &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;您输入的数过大&quot;</span> &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;猜测正确&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>do while循环</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729120114558.png" alt="image-20240729120114558"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729120656334.png" alt="image-20240729120656334"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">do</span></span><br><span class="line">   &#123;</span><br><span class="line">       cout &lt;&lt; <span class="string">&quot;sum=&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">       num++;</span><br><span class="line">   &#125; <span class="keyword">while</span> (num &lt; <span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>案例1：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729122501658.png" alt="image-20240729122501658"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> a, b, c,d= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        a = num / <span class="number">100</span>;</span><br><span class="line">        b = (num / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">        c = num % <span class="number">10</span>;</span><br><span class="line">        d = (a * a * a + b * b * b + c * c * c);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (d==num)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        num++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (num &lt; <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-for循环"><a href="#2-for循环" class="headerlink" title="2.for循环"></a>2.for循环</h5><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729140159359.png" alt="image-20240729140159359"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729140213180.png" alt="image-20240729140213180"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729141048818.png" alt="image-20240729141048818"></p><p>注：先执行程序体，i再++</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//for循环</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>案例3：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729141433025.png" alt="image-20240729141433025"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> a, b, c, d = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span> (num; num &lt;= <span class="number">100</span>;num++)</span><br><span class="line">    &#123;</span><br><span class="line">        a = num / <span class="number">100</span>;</span><br><span class="line">        b = (num / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">        c = num % <span class="number">10</span>;</span><br><span class="line">        d = num % <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span>((c==<span class="number">7</span>)||(b==<span class="number">7</span>)||(d==<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;敲桌子&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-嵌套循环"><a href="#3-嵌套循环" class="headerlink" title="3.嵌套循环"></a>3.嵌套循环</h5><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729142741742.png" alt="image-20240729142741742"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729143136603.png" alt="image-20240729143136603"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;* &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：</p><p>1.&lt;&lt;endl写了后会换行。</p><p>案例四：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729143217030.png" alt="image-20240729143217030"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;<span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; j &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; i * j&lt;&lt;<span class="string">&quot;  &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-跳转语句"><a href="#4-跳转语句" class="headerlink" title="4.跳转语句"></a>4.跳转语句</h5><p>1.break语句</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729144106782.png" alt="image-20240729144106782"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729145548543.png" alt="image-20240729145548543"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729145643180.png" alt="image-20240729145643180"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729145652557.png" alt="image-20240729145652557"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">break</span>在<span class="keyword">switch</span>语句</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择副本难度&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.普通&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.中等&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;3.困难&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; select;</span><br><span class="line">    <span class="keyword">switch</span>(select)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;您选择的是普通难度&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;您选择的是中等难度&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;您选择的是困难难度&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>循环</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (j == <span class="number">5</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; j &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; i * j &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.continue语句</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729145757163.png" alt="image-20240729145757163"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729145815929.png" alt="image-20240729145815929"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729145901110.png" alt="image-20240729145901110"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">100</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; j &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>3.goto语句<br><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729150340708.png" alt="image-20240729150340708"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729151220327.png" alt="image-20240729151220327"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729150852086.png" alt="image-20240729150852086"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//goto语句</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1.xxxx&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2.xxxx&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">goto</span> FLAG;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;3.xxxx&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;4.xxxx&quot;</span> &lt;&lt; endl;</span><br><span class="line">    FLAG:</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;5.xxxx&quot;</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h3 id="五-数组"><a href="#五-数组" class="headerlink" title="五.数组"></a>五.数组</h3><h4 id="1-数组概述"><a href="#1-数组概述" class="headerlink" title="1.数组概述"></a>1.数组概述</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729151319741.png" alt="image-20240729151319741"></p><h4 id="2-一维数组"><a href="#2-一维数组" class="headerlink" title="2.一维数组"></a>2.一维数组</h4><p>1.一维数组定义</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729155538571.png" alt="image-20240729155538571"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729160250453.png" alt="image-20240729160250453"></p><p>三种定义方式</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729162216276.png" alt="image-20240729162216276"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729162225851.png" alt="image-20240729162225851"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729162245116.png" alt="image-20240729162245116"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> array[<span class="number">5</span>];</span><br><span class="line">    array[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">    array[<span class="number">1</span>] = <span class="number">20</span>;</span><br><span class="line">    array[<span class="number">2</span>] = <span class="number">30</span>;</span><br><span class="line">    array[<span class="number">3</span>] = <span class="number">40</span>;</span><br><span class="line">    array[<span class="number">4</span>] = <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; array[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; array[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; array[<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; array[<span class="number">3</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; array[<span class="number">4</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> array2[<span class="number">5</span>] = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line">    cout &lt;&lt; array2[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; array2[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; array2[<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; array2[<span class="number">3</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; array2[<span class="number">4</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; array2[i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> array3[] = &#123;<span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; array3[i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.一维数组数组名</p><p><img src="D:\zone\worldapp\image-20240729162446593.png" alt="image-20240729162446593"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729162958624.png" alt="image-20240729162958624"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729164052236.png" alt="image-20240729164052236"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数组名用途</span></span><br><span class="line">  <span class="type">int</span> array[<span class="number">10</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;数组arrary占用内存空间为：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(array) &lt;&lt; endl;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;数组arrary每个元素占用内存空间为：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(array[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;数组arrary的元素个数为：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(array)/<span class="built_in">sizeof</span>(array[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;数组arrary首地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)array &lt;&lt; endl;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;数组arrary中第一个元素的地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;array[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;数组arrary中第二个元素的地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;array[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">  <span class="comment">//数组名是常量，不可以赋值操作</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>案例1：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729164328737.png" alt="image-20240729164328737"></p><p><img src="D:\zone\worldapp\image-20240729164836328.png" alt="image-20240729164836328"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> MAX = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">5</span>] = &#123;<span class="number">300</span>, <span class="number">350</span>, <span class="number">200</span>, <span class="number">500</span>, <span class="number">250</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i<span class="number">+1</span>]&gt;arr[i])</span><br><span class="line">        &#123;</span><br><span class="line">            MAX = arr[i + <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;最大值为：&quot;</span> &lt;&lt; MAX &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例2：</p><p> <img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729165030788.png" alt="image-20240729165030788"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729170037088.png" alt="image-20240729170037088"></p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">    <span class="type">int</span> start = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> end=<span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(start&lt;end)</span><br><span class="line">    &#123;</span><br><span class="line">        num = arr[start];</span><br><span class="line">        arr[start] = arr[end];</span><br><span class="line">        arr[end] = num;</span><br><span class="line"></span><br><span class="line">        start++;</span><br><span class="line">        end--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.冒泡排序</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729171345569.png" alt="image-20240729171345569"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729181339600.png" alt="image-20240729181339600"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> array[<span class="number">9</span>] = &#123;<span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>;i++) <span class="comment">//九个数两两比对，比对8次就行</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">8</span> - i;j++)<span class="comment">//最末尾的最大值已经找到，不需要最后一次对比</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[j] &gt; array[j<span class="number">+1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                num = array[j];</span><br><span class="line">                array[j] = array[j + <span class="number">1</span>];</span><br><span class="line">                array[j + <span class="number">1</span>] = num;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">9</span>;k++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; array[k] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-二维数组"><a href="#3-二维数组" class="headerlink" title="3.二维数组"></a>3.二维数组</h4><p>1.二维数组定义</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729181747578.png"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729182849010.png" alt="image-20240729182849010"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//二维数组定义</span></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">    arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">    arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">    arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">    arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">    arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; arr[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; arr[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; arr[<span class="number">0</span>][<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; arr[<span class="number">1</span>][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; arr[<span class="number">1</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; arr[<span class="number">1</span>][<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; arr[i][j] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> array2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">        &#123;</span><br><span class="line">            &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">            &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; array2[i][j] &lt;&lt;<span class="string">&quot;  &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> array3[<span class="number">2</span>][<span class="number">3</span>] =&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; array3[i][j] &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> array4[][<span class="number">3</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; array4[i][j] &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.二维数组组名</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729183749055.png" alt="image-20240729183749055"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> array2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">       &#123;</span><br><span class="line">           &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">           &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组的占用空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(array2) &lt;&lt; endl;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组的第一行占用空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(array2[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组每个元素的占用空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(array2[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组的行数为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(array2) / <span class="built_in">sizeof</span>(array2[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组的列数为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(array2[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(array2[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组的元素个数为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(array2) / <span class="built_in">sizeof</span>(array2[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组的首地址为&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)array2 &lt;&lt; endl;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组的第一行地址为&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)array2[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组的第一行地址为&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)array2[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组的第一个元素地址为&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;array2[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;二维数组的第二个元素地址为&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;array2[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>案例一：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240729185735448.png" alt="image-20240729185735448"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    string names[<span class="number">3</span>] = &#123;<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王五&quot;</span>&#125;;</span><br><span class="line">    <span class="type">int</span> array2[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">        &#123;</span><br><span class="line">            &#123;<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>&#125;,</span><br><span class="line">            &#123;<span class="number">90</span>, <span class="number">50</span>, <span class="number">100</span>&#125;,</span><br><span class="line">            &#123;<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum += array2[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; names[i] &lt;&lt; <span class="string">&quot;的成绩为:&quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">        sum = <span class="number">0</span>; </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="六-函数"><a href="#六-函数" class="headerlink" title="六.函数"></a>六.函数</h3><h4 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730100334785.png" alt="image-20240730100334785"></p><h4 id="2-函数定义"><a href="#2-函数定义" class="headerlink" title="2.函数定义"></a>2.函数定义</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730100353558.png" alt="image-20240730100353558"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730101035766.png" alt="image-20240730101035766"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730100306217.png" alt="image-20240730100306217"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730101059623.png" alt="image-20240730101059623"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum = num1 + num2;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>####3.函数调用</p><p> <img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730101452349.png" alt="image-20240730101452349"></p><p>注：函数调用时候的参数是实参，定义时候用的参数是形参。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> c = <span class="built_in">add</span>(a, b);</span><br><span class="line">    cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum = num1 + num2;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-值传递"><a href="#4-值传递" class="headerlink" title="4.值传递"></a>4.值传递</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730101824737.png" alt="image-20240730101824737"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730102457304.png" alt="image-20240730102457304"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>,b=<span class="number">20</span>;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">swap</span>(a, b);</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    temp = num1;</span><br><span class="line">    num1 = num2;</span><br><span class="line">    num2 = temp;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; num1 &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-函数常见样式"><a href="#5-函数常见样式" class="headerlink" title="5.函数常见样式"></a>5.函数常见样式</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730102605922.png" alt="image-20240730102605922"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.无参无返</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;This is a test01&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.有参无返</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;This is a test02。a =&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.无参有返</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;This is a test03&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">99</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.有参有返</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test04</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;This is a test04.a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="built_in">test02</span>(<span class="number">100</span>);</span><br><span class="line">    <span class="type">int</span> num03 = <span class="built_in">test03</span>();</span><br><span class="line">    cout &lt;&lt; num03 &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> num04 = <span class="built_in">test04</span>(<span class="number">80</span>);</span><br><span class="line">    cout &lt;&lt; num04 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-函数声明"><a href="#6-函数声明" class="headerlink" title="6.函数声明"></a>6.函数声明</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730104259131.png" alt="image-20240730104259131"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数声明</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num1 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">20</span>;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">max</span>(num1, num2) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>声明可以写多次，但定义只能写一次，不过开发时一般就写一次；</p><h4 id="7-函数分文件编写"><a href="#7-函数分文件编写" class="headerlink" title="7.函数分文件编写"></a>7.函数分文件编写</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730105103163.png" alt="image-20240730105103163"></p><h3 id="七-指针"><a href="#七-指针" class="headerlink" title="七.指针"></a>七.指针</h3><p>####1.指针定义</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730124050983.png" alt="image-20240730124050983"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730134532956.png" alt="image-20240730134532956"></p><p>注：通过*p就可以改变a的值</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730135011045.png" alt="image-20240730135011045"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> *p;  <span class="comment">//创建指针</span></span><br><span class="line"></span><br><span class="line">    p = &amp;a;  <span class="comment">//传参建立关系</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a的地址为&quot;</span> &lt;&lt; &amp;a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;p的地址为&quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    *p = <span class="number">1000</span>; <span class="comment">//通过p指针的指向就可以改变值</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a的值为&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*p的值为&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####2.指针的占用内存空间</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730135237240.png" alt="image-20240730135237240"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730135500659.png" alt="image-20240730135500659"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730140116349.png" alt="image-20240730140116349"></p><p>注：32位操作系统下，所有类型指针都占4个字节。</p><p>​       64位操作系统下，所有类型指针都占8个字节。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> *p = &amp;a; <span class="comment">// 创建指针,传参建立关系</span></span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;size of(int *)=&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p)&lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;size of(int *)=&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span> *) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;size of(float *)=&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">float</span> *) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;size of(double *)=&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span> *) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;size of(char *)=&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span> *) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-空指针和野指针"><a href="#3-空指针和野指针" class="headerlink" title="3.空指针和野指针"></a>3.空指针和野指针</h4><p>空指针</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730140219725.png" alt="image-20240730140219725"></p><p>注：1.指针一开始不知道指向哪好，就指向空指针，一般用来指针初始化。</p><p>​2.空指针指向的内存是不可以访问的。</p><p>​3.0~255的内存编号是系统占用的，不可以访问</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730140838810.png" alt="image-20240730140838810"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//用来初始化指针</span></span><br></pre></td></tr></table></figure><p>野指针</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730140959261.png" alt="image-20240730140959261"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//野指针</span></span><br><span class="line">    <span class="type">int</span> *p = (<span class="type">int</span> *)<span class="number">0x1100</span>;</span><br><span class="line">    cout &lt;&lt; *p &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>注：1.指向但是没有读取权限。</p><p>​       2.不是自己访问的指针一般都会出错。</p><h4 id="4-修饰指针"><a href="#4-修饰指针" class="headerlink" title="4.修饰指针"></a>4.修饰指针</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730141353516.png" alt="image-20240730141353516"></p><p>1.const修饰指针  –常量指针</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730141908150.png" alt="image-20240730141908150"></p><p>指针指向可以改，指向的值不可以改。</p><p>2.const修饰常量 –指针常量</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730142205264.png" alt="image-20240730142205264"></p><p>指针的值可以改，指针的指向不可以改。</p><p>3.const既修饰指针，又修饰常量</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730142337265.png" alt="image-20240730142337265"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730143050215.png" alt="image-20240730143050215"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//const修饰指针</span></span><br><span class="line">    <span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b1 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> *p1 = &amp;a1;</span><br><span class="line">    <span class="comment">// *p1 = 10;//错误</span></span><br><span class="line">    p1 = &amp;b1;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// const修饰常量</span></span><br><span class="line">    <span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b2 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> *<span class="type">const</span> p2 = &amp;a2;</span><br><span class="line">    *p2 = <span class="number">10</span>; <span class="comment">//指针指向的值可以修改</span></span><br><span class="line">    <span class="comment">// p2 = &amp;b2; //指针指向不可以改</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//const既修饰指针又修饰常量</span></span><br><span class="line">    <span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b3 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> *<span class="type">const</span> p3 = &amp;a3;</span><br><span class="line">    <span class="comment">// *p3 = 10; // 指针指向的值不可以修改</span></span><br><span class="line">    <span class="comment">// p3 = &amp;b3; // 指针指向不可以改</span></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-指针和数组"><a href="#5-指针和数组" class="headerlink" title="5.指针和数组"></a>5.指针和数组</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730144331468.png" alt="image-20240730144331468"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;arr数组第一个元素为&quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> *p = arr;</span><br><span class="line">    cout &lt;&lt;<span class="string">&quot;指针访问的第一个元素为：&quot;</span>&lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">    p++;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;指针访问的第二个元素为：&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;用指针访问数组：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> *p2 = arr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// cout &lt;&lt; arr[i] &lt;&lt; endl;</span></span><br><span class="line">        cout &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-指针和参数"><a href="#6-指针和参数" class="headerlink" title="6.指针和参数"></a>6.指针和参数</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730144450642.png" alt="image-20240730144450642"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730145951063.png" alt="image-20240730145951063"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730150037291.png" alt="image-20240730150037291"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap01</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;swap 01 a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;swap 01 b=&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap02</span><span class="params">(<span class="type">int</span> *p1, <span class="type">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = *p1;</span><br><span class="line">    *p1 = *p2;</span><br><span class="line">    *p2 = temp;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;swap 01 a=&quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;swap 01 b=&quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">swap02</span>(&amp;a, &amp;b);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b=&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-指针-数组，函数"><a href="#7-指针-数组，函数" class="headerlink" title="7.指针,数组，函数"></a>7.指针,数组，函数</h4><p>案例1：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730150156555.png" alt="image-20240730150156555"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="type">int</span> *arr,<span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - i - <span class="number">1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> *p = arr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">0</span>; n &lt; len; n++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;len=&quot;</span>&lt;&lt;len &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">bubbleSort</span>(arr, len);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> *p = arr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">0</span>; n &lt; len;n++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="八-结构体"><a href="#八-结构体" class="headerlink" title="八.结构体"></a>八.结构体</h3><p>####1.结构体定义和使用</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240730151758745.png" alt="image-20240730151758745"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731084135548.png" alt="image-20240731084135548"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731085957760.png" alt="image-20240731085957760"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;s3;                   <span class="comment">//第三种方法</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Student s1;</span><br><span class="line">     <span class="comment">//第一种方法,并且关键字Struct可以省略不写</span></span><br><span class="line">     <span class="comment">//创建变量时可以省略，定义时不可以省略</span></span><br><span class="line">    s<span class="number">1.</span>name = <span class="string">&quot;张三&quot;</span>;  </span><br><span class="line">    s<span class="number">1.</span>age = <span class="number">19</span>;</span><br><span class="line">    s<span class="number">1.</span>score = <span class="number">95</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;成绩：&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Student</span> s2 = &#123;<span class="string">&quot;李华&quot;</span>, <span class="number">15</span>, <span class="number">96</span>&#125;;<span class="comment">//第二种方法</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s<span class="number">2.</span>name &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; s<span class="number">2.</span>age &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;成绩：&quot;</span> &lt;&lt; s<span class="number">2.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    s<span class="number">3.</span>name = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line">    s<span class="number">3.</span>age = <span class="number">22</span>;</span><br><span class="line">    s<span class="number">3.</span>score = <span class="number">84</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s<span class="number">3.</span>name &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; s<span class="number">3.</span>age &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;成绩：&quot;</span> &lt;&lt; s<span class="number">3.</span>score &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：1.struct在创建变量和使用时可以省略，定义时不可以省略</p><p>​       2.一般用.来访问结构体中的变量，如student.name</p><p>​   3.有三种创建方法，一般第三种不常用</p><h4 id="2-结构体数组"><a href="#2-结构体数组" class="headerlink" title="2.结构体数组"></a>2.结构体数组</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731090330510.png" alt="image-20240731090330510"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Student arr[<span class="number">3</span>] =</span><br><span class="line">    &#123;</span><br><span class="line">        &#123;<span class="string">&quot;李华&quot;</span>, <span class="number">19</span>, <span class="number">95</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;张三&quot;</span>, <span class="number">18</span>, <span class="number">90</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;李四&quot;</span>, <span class="number">20</span>, <span class="number">92</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    arr[<span class="number">2</span>].name = <span class="string">&quot;赵六&quot;</span>;</span><br><span class="line">    arr[<span class="number">2</span>].age = <span class="number">80</span>;</span><br><span class="line">    arr[<span class="number">2</span>].score = <span class="number">85</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; arr[i].name &lt;&lt; endl</span><br><span class="line">             &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; arr[i].age&lt;&lt; endl</span><br><span class="line">             &lt;&lt; <span class="string">&quot;成绩：&quot;</span> &lt;&lt; arr[i].score &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-结构体指针"><a href="#3-结构体指针" class="headerlink" title="3.结构体指针"></a>3.结构体指针</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731092510677.png" alt="image-20240731092510677"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731093522347.png" alt="image-20240731093522347"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Student s1 = &#123;<span class="string">&quot;李华&quot;</span>, <span class="number">19</span>, <span class="number">95</span>&#125;;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;成绩：&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Student</span> *p = &amp;s1;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;成绩：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-结构体嵌套结构体"><a href="#4-结构体嵌套结构体" class="headerlink" title="4.结构体嵌套结构体"></a>4.结构体嵌套结构体</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731093739633.png" alt="image-20240731093739633"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731094704483.png" alt="image-20240731094704483"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Student</span> stu;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Teacher t;</span><br><span class="line">    t.id = <span class="number">2000221</span>;</span><br><span class="line">    t.name = <span class="string">&quot;李白&quot;</span>;</span><br><span class="line">    t.age = <span class="number">50</span>;</span><br><span class="line">    t.stu.name = <span class="string">&quot;小白&quot;</span>;</span><br><span class="line">    t.stu.age = <span class="number">15</span>;</span><br><span class="line">    t.stu.score = <span class="number">82</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;老师的姓名：&quot;</span> &lt;&lt; t.name &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;老师的id：&quot;</span> &lt;&lt; t.id &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;老师的年龄：&quot;</span> &lt;&lt; t.age &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;老师辅导学生的姓名：&quot;</span> &lt;&lt; t.stu.name &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;老师辅导学生的年龄：&quot;</span> &lt;&lt; t.stu.age &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;老师辅导学生的分数：&quot;</span> &lt;&lt; t.stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-结构体做函数参数"><a href="#5-结构体做函数参数" class="headerlink" title="5.结构体做函数参数"></a>5.结构体做函数参数</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731094815176.png" alt="image-20240731094815176"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintStudent1</span><span class="params">(Student s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s.age = <span class="number">100</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;在PrintStudent1函数中&quot;</span> &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; s.name &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; s.age &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;成绩：&quot;</span> &lt;&lt; s.score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintStudent2</span><span class="params">(Student *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p-&gt;age = <span class="number">100</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;在PrintStudent2函数中&quot;</span>&lt;&lt;endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;成绩：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Student t;</span><br><span class="line">    t.name = <span class="string">&quot;李白&quot;</span>;</span><br><span class="line">    t.age = <span class="number">50</span>;</span><br><span class="line">    t.score = <span class="number">85</span>;</span><br><span class="line">    <span class="comment">// PrintStudent1(t);</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">PrintStudent2</span>(&amp;t);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; t.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731100450673.png" alt="image-20240731100450673"></p><h4 id="6-结构体中const的使用场景"><a href="#6-结构体中const的使用场景" class="headerlink" title="6.结构体中const的使用场景"></a>6.结构体中const的使用场景</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731100710669.png" alt="image-20240731100710669"></p><p>注：用以只读操作，防止修改误操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintStudent1</span><span class="params">(<span class="type">const</span> Student *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p-&gt;name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; endl</span><br><span class="line">         &lt;&lt; <span class="string">&quot;成绩：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Student t;</span><br><span class="line">    t.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    t.age = <span class="number">18</span>;</span><br><span class="line">    t.score = <span class="number">85</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">PrintStudent1</span>(&amp;t);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：1.使用指针可以节省空间</p><p>案例1:</p><p><img src="D:\zone\Typora\image-20240731101945986.png" alt="image-20240731101945986"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731102548549.png" alt="image-20240731102548549"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    Student stu[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">allocateSpace</span><span class="params">(Teacher Array[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string nameSeed = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Array[i].name = <span class="string">&quot;Teacher_&quot;</span>;</span><br><span class="line">        Array[i].name += nameSeed[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>  ;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            Array[i].stu[j].name = <span class="string">&quot;Student_&quot;</span>;</span><br><span class="line">            Array[i].stu[j].name += nameSeed[j];</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> random = <span class="built_in">rand</span>() % <span class="number">61</span> <span class="number">+40</span> ;</span><br><span class="line">            Array[i].stu[j].score =random;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintInfo</span><span class="params">(Teacher Array[],<span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;教师姓名&quot;</span> &lt;&lt; Array[i].name &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;学生的姓名：&quot;</span> &lt;&lt; Array[i].stu[j].name &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;学生的成绩：&quot;</span> &lt;&lt; Array[i].stu[j].score &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    Teacher tea[<span class="number">3</span>];</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">sizeof</span>(tea) / <span class="built_in">sizeof</span>(tea[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">allocateSpace</span>(tea, len);</span><br><span class="line">    <span class="built_in">PrintInfo</span>(tea, len);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例2：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731105522008.png" alt="image-20240731105522008"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Hero</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    string gender;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BubbleSort</span><span class="params">(Hero Array[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - i - <span class="number">1</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(Array[j].age&gt;Array[j<span class="number">+1</span>].age)</span><br><span class="line">            &#123;</span><br><span class="line">                Hero temp = Array[j];</span><br><span class="line">                Array[j] = Array[j + <span class="number">1</span>];</span><br><span class="line">                Array[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintInfo</span> <span class="params">(Hero hArray[],<span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; hArray[i].name &lt;&lt; endl</span><br><span class="line">             &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; hArray[i].age &lt;&lt; endl</span><br><span class="line">             &lt;&lt; <span class="string">&quot;性别&quot;</span> &lt;&lt; hArray[i].gender &lt;&lt; endl</span><br><span class="line">             &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Hero hArray[<span class="number">5</span>] = &#123;</span><br><span class="line">        &#123;<span class="string">&quot;刘备&quot;</span>, <span class="number">23</span>, <span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;关羽&quot;</span>, <span class="number">22</span>, <span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;张飞&quot;</span>, <span class="number">20</span>, <span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;赵云&quot;</span>, <span class="number">21</span>, <span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;貂蝉&quot;</span>, <span class="number">19</span>, <span class="string">&quot;女&quot;</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">sizeof</span>(hArray) / <span class="built_in">sizeof</span>(hArray[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">BubbleSort</span>(hArray, len);</span><br><span class="line">    <span class="built_in">PrintInfo</span>(hArray, len);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h2><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731114603980.png" alt="image-20240731114603980"></p><h3 id="一-内存分区模型"><a href="#一-内存分区模型" class="headerlink" title="一.内存分区模型"></a>一.内存分区模型</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731133907205.png" alt="image-20240731133907205"></p><p>####1.四大区域</p><p>1.代码区</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731135513207.png" alt="image-20240731135513207"></p><p>2.全局区</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731135654891.png" alt="image-20240731135654891"></p><p>其他变量：const 修饰的一些变量。</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731141615123.png" alt="image-20240731141615123"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局变量</span></span><br><span class="line"><span class="type">int</span> g_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> c_g_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> c_g_b = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//变量</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态变量</span></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> s_a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> s_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;变量a的地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;变量b的地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;变量g_a的地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;g_a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;变量g_b的地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;g_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;变量s_a的地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;s_a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;变量s_b的地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;s_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符串常量地址</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;字符串常量地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;<span class="string">&quot;Hello World&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;全局常量c_g_a地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;c_g_a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;全局常量c_g_b地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;c_g_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;全局常量c_g_a地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;c_g_a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> c_l_a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> c_l_b = <span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;局部变量c_l_a地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;c_l_a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;局部变量c_l_b地址为：&quot;</span> &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)&amp;c_l_b &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.栈区</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731141733804.png" alt="image-20240731141733804"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731142603793.png" alt="image-20240731142603793"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">return</span> &amp;a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> *p = <span class="built_in">func</span>();</span><br><span class="line">    cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：不要返回a（局部变量）的值，因为函数运行完内存已经释放出去了，已经不是原来那个值了。</p><p>4.堆区</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731142719645.png" alt="image-20240731142719645"></p><p>在堆区开辟数据</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731143355008.png" alt="image-20240731143355008"></p><p>注：堆区的值的地址被栈区的指针接收到了</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731142731906.png" alt="image-20240731142731906"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> *<span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//利用new开辟到堆区</span></span><br><span class="line">    <span class="type">int</span> *a = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> *p = <span class="built_in">func</span>();</span><br><span class="line">    cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; (<span class="type">long</span> <span class="type">long</span>)p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-new操作符"><a href="#2-new操作符" class="headerlink" title="2.new操作符"></a>2.new操作符</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731144008530.png" alt="image-20240731144008530"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731145524247.png" alt="image-20240731145524247"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240731145600860.png" alt="image-20240731145600860"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> *p = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">//new的时候会返回指针</span></span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> *p = <span class="built_in">func</span>();</span><br><span class="line">    cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//堆区的数据由人生成管理</span></span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">    cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> *arr = <span class="keyword">new</span> <span class="type">int</span> [<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[i] = i + <span class="number">100</span>;   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放数组要加[]才可以</span></span><br><span class="line">    <span class="keyword">delete</span>[] arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：1.释放数组要加[]才可以</p><h3 id="二-引用"><a href="#二-引用" class="headerlink" title="二.引用"></a>二.引用</h3><p>####1.引用的基本使用</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805090117004.png" alt="image-20240805090117004"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805090453267.png" alt="image-20240805090453267"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805090627077.png" alt="image-20240805090627077"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> &amp;b = a;</span><br><span class="line"></span><br><span class="line">    b = <span class="number">100</span>;</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-引用的注意事项"><a href="#2-引用的注意事项" class="headerlink" title="2.引用的注意事项"></a>2.引用的注意事项</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805090705886.png" alt="image-20240805090705886"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805090937144.png" alt="image-20240805090937144"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805091406147.png" alt="image-20240805091406147"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1.必须初始化</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// int &amp;b;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.引用完就不可以引用别的</span></span><br><span class="line">    <span class="type">int</span> &amp;b = a;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line">    <span class="comment">// int &amp;b = c;</span></span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-引用作函数参数"><a href="#3-引用作函数参数" class="headerlink" title="3.引用作函数参数"></a>3.引用作函数参数</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805091519133.png" alt="image-20240805091519133"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805092856046.png" alt="image-20240805092856046"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap01</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line">    cout &lt;&lt;<span class="string">&quot;swap01  &quot;</span> &lt;&lt;a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt;<span class="string">&quot;swap01  &quot;</span>&lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap02</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap03</span><span class="params">(<span class="type">int</span> &amp;a,<span class="type">int</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1.值传递</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">swap01</span>(a, b);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//2.地址传递</span></span><br><span class="line">    <span class="comment">//swap02(&amp;a, &amp;b);</span></span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.引用传递</span></span><br><span class="line">    <span class="built_in">swap03</span>(a, b);</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805093007036.png" alt="image-20240805093007036"></p><p>####4.引用作函数返回值</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805093047799.png" alt="image-20240805093047799"></p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>&amp; <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">10</span>; <span class="comment">//局部变量在内存区的栈区</span></span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> &amp;<span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> a = <span class="number">10</span>; <span class="comment">// 静态变量是全局区，在程序结束后才释放掉</span></span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// int &amp;ref = test01();</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; ref &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回的时候函数空间回收了，里面创造的值返回出来也就没了。</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> &amp;ref = <span class="built_in">test02</span>();</span><br><span class="line">    cout &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数的返回值是引用，他就可以左值，即在左边被赋值修改使用</span></span><br><span class="line">    <span class="built_in">test02</span>() = <span class="number">1000</span>;</span><br><span class="line">    cout &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：1.不能返回局部变量的引用。返回的时候函数空间回收了，里面创造的值返回出来也就没了。</p><p>​        2.函数的返回值是引用，他就可以左值，即在左边被赋值修改使用。</p><h4 id="5-引用的本质"><a href="#5-引用的本质" class="headerlink" title="5.引用的本质"></a>5.引用的本质</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805094419747.png" alt="image-20240805094419747"></p><p>即：指针的指向不可以修改，指针的值可以修改。</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805095420776.png" alt="image-20240805095420776"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805095452375.png" alt="image-20240805095452375"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> &amp;ref)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ref = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> &amp;ref = a;</span><br><span class="line">    ref = <span class="number">20</span>;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">func</span>(a);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805095525189.png" alt="image-20240805095525189"></p><h4 id="6-常量引用"><a href="#6-常量引用" class="headerlink" title="6.常量引用"></a>6.常量引用</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805095615981.png" alt="image-20240805095615981"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805100546874.png" alt="image-20240805100546874"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//val = 1000;//加上const后不可以修改</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;value=&quot;</span> &lt;&lt; val&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// int &amp;ref = 10;//引用必须引一块合法的内存空间</span></span><br><span class="line">    <span class="type">int</span> &amp;ref = a;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> &amp;ref2 = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    编译器修改为</span></span><br><span class="line"><span class="comment">    int temp=10;</span></span><br><span class="line"><span class="comment">    const int &amp;ref =temp;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">// ref = 20;</span></span><br><span class="line">    <span class="comment">//加入const只读不可以修改</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> aa = <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">show</span>(aa);</span><br><span class="line">    cout &lt;&lt; aa &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###三.函数提高</p><h4 id="1-函数默认参数"><a href="#1-函数默认参数" class="headerlink" title="1.函数默认参数"></a>1.函数默认参数</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805105230186.png" alt="image-20240805105230186"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805111308747.png" alt="image-20240805111308747"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b=<span class="number">20</span>,<span class="type">int</span> c=<span class="number">30</span>)</span></span></span><br><span class="line"><span class="function"><span class="comment">//如果有传值用传值，没有用默认值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//注意：</span></span><br><span class="line"><span class="comment">//1.如果某个位置有默认参数，这个位置往后从左到右都有默认参数.</span></span><br><span class="line"><span class="comment">//就是说一个位置有默认参数，往后的值都必须有默认参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// int func2(int a, int b = 30, int c)</span></span><br><span class="line"><span class="comment">// // 如果有传值用传值，没有用默认值</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     return a + b + c;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.如果函数声明有默认参数，函数实现就不能有</span></span><br><span class="line"><span class="comment">//声明和实现只能有一个有默认参数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a=<span class="number">10</span>,<span class="type">int</span> b=<span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; <span class="built_in">func</span>(<span class="number">10</span>,<span class="number">30</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-函数占位参数"><a href="#2-函数占位参数" class="headerlink" title="2.函数占位参数"></a>2.函数占位参数</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805111601323.png" alt="image-20240805111601323"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805113748461.png" alt="image-20240805113748461"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> =<span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;这是一个占位符&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//注意：1.占位参数可以有默认参数</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">func</span>(a, <span class="number">20</span> );</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-函数重载"><a href="#3-函数重载" class="headerlink" title="3.函数重载"></a>3.函数重载</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805113950974.png" alt="image-20240805113950974"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func() 的调用00&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func(int a) 的调用01&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">double</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func(double a) 的调用02&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a,<span class="type">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func(int a,double b) 的调用03&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">double</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func(double a, int b) 的调用04&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// int func(double a, int b)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     cout &lt;&lt; &quot;func(double a, int b) 的调用04&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">3.14159</span>;</span><br><span class="line">    <span class="built_in">func</span>();</span><br><span class="line">    <span class="built_in">func</span>(a);</span><br><span class="line">    <span class="built_in">func</span>(b);</span><br><span class="line">    <span class="built_in">func</span>(<span class="number">10</span>, <span class="number">3.14</span>);</span><br><span class="line">    <span class="built_in">func</span>(<span class="number">3.14</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="comment">//函数返回值不可以作为函数重载的条件</span></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805115226262.png" alt="image-20240805115226262"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数返回值不可以作为函数重载的条件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">double</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func(double a, int b) 的调用04&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func</span><span class="params">(<span class="type">double</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func(double a, int b) 的调用04&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-函数重载注意事项"><a href="#4-函数重载注意事项" class="headerlink" title="4.函数重载注意事项"></a>4.函数重载注意事项</h4><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805115502282.png" alt="image-20240805115502282"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805120651857.png" alt="image-20240805120651857"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240805120716715.png" alt="image-20240805120716715"></p><p>处理方法：就是尽量避免</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//会优先调用可读可写的代码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func(int &amp;a)的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 想调用就fun(10),就是一个常数;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func(const int &amp;a)的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func2(int a)的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b=<span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;func2(int a,int b)的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// int a = 10;</span></span><br><span class="line">    <span class="comment">// func(a);</span></span><br><span class="line">    <span class="comment">// func(10);</span></span><br><span class="line">    <span class="comment">// func2(10);  </span></span><br><span class="line">    <span class="comment">//当函数重载碰到默认参数，出现二义性，报错</span></span><br><span class="line">    <span class="built_in">func2</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四-类和对象"><a href="#四-类和对象" class="headerlink" title="四.类和对象"></a>四.类和对象</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806095614732.png" alt="image-20240806095614732"></p><h4 id="1-封装"><a href="#1-封装" class="headerlink" title="1.封装"></a>1.封装</h4><p>#####1.封装意义</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806095943857.png" alt="image-20240806095943857"></p><p>案例1：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806102045962.png" alt="image-20240806102045962"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> PI = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 访问权限</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> m_r;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">getCirclePerimeter</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * PI * m_r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//通过圆类创建对象，创建具体实例，就是实例化</span></span><br><span class="line">    Circle c1;</span><br><span class="line">    c<span class="number">1.</span>m_r = <span class="number">10</span>;</span><br><span class="line">    <span class="type">double</span> ZC = c<span class="number">1.</span><span class="built_in">getCirclePerimeter</span>();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;圆周长为：&quot;</span> &lt;&lt; ZC &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例2：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806102138372.png" alt="image-20240806102138372"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806104159722.png" alt="image-20240806104159722"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment">//成员 成员属性 成员变量</span></span><br><span class="line">        <span class="comment">//行为 成员函数 成员方法</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//属性</span></span><br><span class="line">        string m_name;</span><br><span class="line">        <span class="type">int</span> m_ID;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//行为</span></span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string name)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            m_name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">setID</span><span class="params">(<span class="type">int</span> ID)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            m_ID = ID;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">showName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; m_name &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">showID</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;ID:&quot;</span> &lt;&lt; m_ID &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Student s1;</span><br><span class="line">    s<span class="number">1.</span>m_name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    s<span class="number">1.</span>m_ID = <span class="number">000001</span>;</span><br><span class="line"></span><br><span class="line">    s<span class="number">1.</span><span class="built_in">showName</span>();</span><br><span class="line">    s<span class="number">1.</span><span class="built_in">showID</span>();</span><br><span class="line"></span><br><span class="line">    Student s2;</span><br><span class="line">    s<span class="number">2.</span>m_name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line">    s<span class="number">2.</span>m_ID = <span class="number">13236</span>;</span><br><span class="line"></span><br><span class="line">    s<span class="number">2.</span><span class="built_in">showName</span>();</span><br><span class="line">    s<span class="number">2.</span><span class="built_in">showID</span>();</span><br><span class="line"></span><br><span class="line">    Student s3;</span><br><span class="line">    s<span class="number">3.</span><span class="built_in">setName</span>(<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">    s<span class="number">3.</span><span class="built_in">setID</span>(<span class="number">1546656</span>);</span><br><span class="line"></span><br><span class="line">    s<span class="number">3.</span><span class="built_in">showName</span>();</span><br><span class="line">    s<span class="number">3.</span><span class="built_in">showID</span>();</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>封装意义2：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806104337222.png" alt="image-20240806104337222"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806104525227.png" alt="image-20240806104525227"></p><p>注：</p><p>保护权限：子类也可以访问父类保护的内容</p><p>私有权限：子类不能访问父类保护的内容</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        string m_name;</span><br><span class="line">    <span class="keyword">protected</span>:</span><br><span class="line">        string m_car;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="type">int</span> m_password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            m_name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">            m_car = <span class="string">&quot;拖拉机&quot;</span>;</span><br><span class="line">            m_password = <span class="number">49664</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p1;</span><br><span class="line">    <span class="comment">// p1.m_name = &quot;李四&quot;;</span></span><br><span class="line">    <span class="comment">// p1.m_car = &quot;奔驰&quot;;</span></span><br><span class="line">    <span class="comment">// p1.m_password = 2649466;</span></span><br><span class="line"></span><br><span class="line">    p<span class="number">1.f</span>unc();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#####2.struct和class的区别</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806105804298.png" alt="image-20240806105804298"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806105919737.png" alt="image-20240806105919737"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806110400648.png" alt="image-20240806110400648"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> m_A;<span class="comment">//默认是私有</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">C2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    C1 c;</span><br><span class="line">    <span class="comment">// c.m_A = 100;</span></span><br><span class="line"></span><br><span class="line">    C2 d;</span><br><span class="line">    d.m_B = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#####3.成员属性设置为私有</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806110528443.png" alt="image-20240806110528443"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.自己控制读写权限</span></span><br><span class="line"><span class="comment">//2.写检测数据有效性</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">string <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getAge</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_Age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setAge</span><span class="params">(<span class="type">int</span> age)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(age&lt;<span class="number">0</span>||age&gt;<span class="number">150</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;年龄输入有误，请重试&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        m_Age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setIdol</span><span class="params">(string idol)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_Idol = idol;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    string m_name;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> m_Age=<span class="number">18</span>;</span><br><span class="line"></span><br><span class="line">    string m_Idol;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    p.<span class="built_in">setName</span>(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    p.<span class="built_in">setAge</span>(<span class="number">160</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p.<span class="built_in">getName</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;年龄：&quot;</span> &lt;&lt; p.<span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line">    p.<span class="built_in">setIdol</span>(<span class="string">&quot;小明&quot;</span>);</span><br><span class="line">    <span class="comment">// cout &lt;&lt; &quot;偶像：&quot; &lt;&lt; p.getAge() &lt;&lt; endl;</span></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例1.</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806113505390.png" alt="image-20240806113505390"></p><p>  <img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240806121453725.png" alt="image-20240806121453725"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cube</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="type">int</span> m_L;</span><br><span class="line">        <span class="type">int</span> m_W;</span><br><span class="line">        <span class="type">int</span> m_H;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//获取长宽高</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getL</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_L;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getW</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_W;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getH</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_H;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置长宽高</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setL</span><span class="params">(<span class="type">int</span> L)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_L = L;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setW</span><span class="params">(<span class="type">int</span> W)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_W = W;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setH</span><span class="params">(<span class="type">int</span> H)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_H = H;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//求面积</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getAreaA</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_L * m_H;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getAreaB</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_W * m_H;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getAreaC</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_L * m_W;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//求表面积</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getSurfaceArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (m_L * m_W + m_L * m_H + m_W * m_H) * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求体积</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getVolume</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_L * m_W * m_H;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员函数判断</span></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isSameByClass</span><span class="params">(Cube &amp;c)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (m_L == c.<span class="built_in">getL</span>() &amp;&amp; m_W == c.<span class="built_in">getW</span>() &amp;&amp; m_H == c.<span class="built_in">getH</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局函数判断是否相等；</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isSame</span><span class="params">(Cube &amp;c1,Cube &amp;c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (c<span class="number">1.</span><span class="built_in">getL</span>() == c<span class="number">2.</span><span class="built_in">getL</span>() &amp;&amp; c<span class="number">1.</span><span class="built_in">getW</span>() == c<span class="number">2.</span><span class="built_in">getW</span>() &amp;&amp;c<span class="number">1.</span><span class="built_in">getH</span>() == c<span class="number">2.</span><span class="built_in">getH</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Cube c1;</span><br><span class="line">    c<span class="number">1.</span><span class="built_in">setL</span>(<span class="number">10</span>);</span><br><span class="line">    c<span class="number">1.</span><span class="built_in">setW</span>(<span class="number">5</span>);</span><br><span class="line">    c<span class="number">1.</span><span class="built_in">setH</span>(<span class="number">12</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;长:&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getL</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;宽:&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getW</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;高:&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getH</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;表面积:&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getSurfaceArea</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;体积:&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getVolume</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    Cube c2;</span><br><span class="line">    c<span class="number">2.</span><span class="built_in">setL</span>(<span class="number">10</span>);</span><br><span class="line">    c<span class="number">2.</span><span class="built_in">setW</span>(<span class="number">5</span>);</span><br><span class="line">    c<span class="number">2.</span><span class="built_in">setH</span>(<span class="number">11</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> ret1 = <span class="built_in">isSame</span>(c1, c2);</span><br><span class="line">    <span class="keyword">if</span>(ret1)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;c1与c2相等&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;c1与c2不相等&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> ret2 = c<span class="number">1.</span><span class="built_in">isSameByClass</span>(c2);</span><br><span class="line">    <span class="keyword">if</span> (ret2)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;成员函数：c1与c2相等&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;成员函数：c1与c2不相等&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-对象的初始化和清理"><a href="#2-对象的初始化和清理" class="headerlink" title="2.对象的初始化和清理"></a>2.对象的初始化和清理</h4><h5 id="1-构造函数和析构函数"><a href="#1-构造函数和析构函数" class="headerlink" title="1.构造函数和析构函数"></a>1.构造函数和析构函数</h5><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240913134411426.png" alt="image-20240913134411426"></p><p>构造函数和析构函数：</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240913134830677.png" alt="image-20240913134830677"></p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20240913140324873.png" alt="image-20240913140324873"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;构造函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ~<span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;这是Person的析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//test01();</span></span><br><span class="line">    Person p;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-构造函数的分类"><a href="#2-构造函数的分类" class="headerlink" title="2.构造函数的分类"></a>2.构造函数的分类</h5>]]></content>
      
      
      <categories>
          
          <category> MyCPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/10/07/hello-world/"/>
      <url>/2025/10/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
